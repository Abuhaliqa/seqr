version: '2.4'

services:
  postgres:
    image: gcr.io/seqr-project/postgres
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  init-postgres:
    image: gcr.io/seqr-project/postgres
    depends_on:
      postgres:
        condition: service_healthy
    command:
      psql -h postgres -U postgres -c "CREATE DATABASE seqrdb"

  redis:
    image: gcr.io/seqr-project/redis
    ports:
      - 6379:6379

  elasticsearch:
    image: gcr.io/seqr-project/elasticsearch
    ports:
      - 9200:9200
    volumes:
      - ./data/elasticsearch:/elasticsearch-data

    healthcheck:
      test: ["CMD-SHELL", "curl localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 3

  kibana:
    image: gcr.io/seqr-project/kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_SERVICE_HOSTNAME=elasticsearch
      - ELASTICSEARCH_SERVICE_PORT=9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  #phenotips:
  #  image: gcr.io/seqr-project/phenotips
  #  ports:
  #    - 8080:8080

  seqr:
    image: gcr.io/seqr-project/seqr
    ports:
      - 8000:8000

    environment:
      - POSTGRES_SERVICE_HOSTNAME=postgres
      - ELASTICSEARCH_SERVICE_HOSTNAME=elasticsearch
      - PGHOST=postgres
      - PGUSER=postgres
      - GUNICORN_WORKER_THREADS=4

    depends_on:
      - init-postgres
      - elasticsearch
      - redis
      #- phenotips
