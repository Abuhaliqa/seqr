kind: ServiceAccount
apiVersion: v1
metadata:
  name: nginx
  namespace: {{ NAMESPACE }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx
  namespace: {{ NAMESPACE }}
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "extensions"
  resources:
  - ingresses/status
  verbs:
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx
  namespace: {{ NAMESPACE }}
subjects:
- kind: ServiceAccount
  name: nginx
  namespace: {{ NAMESPACE }}
roleRef:
  kind: ClusterRole
  name: nginx
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
  namespace: {{ NAMESPACE }}
data:
  # for list of options, see https://github.com/nginxinc/kubernetes-ingress/blob/master/examples/customization/nginx-config.yaml
  client-max-body-size: "8192m" # default is "1m". See http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ NAMESPACE }}
  labels:
    name: nginx
    deployment: {{ DEPLOY_TO }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        name: nginx
        deployment: {{ DEPLOY_TO }}
    spec:
      serviceAccountName: nginx
      containers:
      - image: nginx/nginx-ingress:1.3.0
        imagePullPolicy: Always
        name: nginx
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-configmaps={{ DEPLOY_TO }}/nginx-config
          - -default-server-tls-secret={{ DEPLOY_TO }}/nginx-secrets
         #- -v=3 # Enables extensive logging. Useful for troubleshooting.
         #- -report-ingress-status
         #- -external-service=nginx
         #- -enable-leader-election
---
kind: Service
apiVersion: v1
metadata:
  name: nginx
  namespace: {{ NAMESPACE }}
  labels:
    name: nginx
    deployment: {{ DEPLOY_TO }}
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: {{ CLUSTER_EXTERNAL_IP }}  # static IP pre-allocated.
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx
