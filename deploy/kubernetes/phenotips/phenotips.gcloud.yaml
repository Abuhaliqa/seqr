kind: Service
apiVersion: v1
metadata:
  name: phenotips
  labels:
    name: phenotips
    deployment: {{ DEPLOY_TO }}
spec:
  ports:
  - port: {{ PHENOTIPS_SERVICE_PORT }}
  selector:
    name: phenotips
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: phenotips
  labels:
    name: phenotips
    deployment: {{ DEPLOY_TO }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: phenotips
        deployment: {{ DEPLOY_TO }}
    spec:
      containers:
      - name: phenotips-pod
        image: {{ DOCKER_IMAGE_PREFIX }}/phenotips:{{ TIMESTAMP }}
        ports:
        - containerPort: {{ PHENOTIPS_SERVICE_PORT }}
          protocol: TCP
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.password
        - name: GCLOUD_PROJECT      #  TODO use ConfigMap envFrom: (waiting for https://github.com/kubernetes/kubernetes/issues/49461)
          value: "{{ GCLOUD_PROJECT }}"
        - name: GCLOUD_ZONE
          value: "{{ GCLOUD_ZONE }}"
        - name: SEQR_SERVICE_PORT
          value: "{{ SEQR_SERVICE_PORT }}"
        - name: SEQR_UI_DEV_PORT
          value: "{{ SEQR_UI_DEV_PORT }}"
        - name: PHENOTIPS_SERVICE_PORT
          value: "{{ PHENOTIPS_SERVICE_PORT }}"
        - name: POSTGRES_SERVICE_PORT
          value: "{{ POSTGRES_SERVICE_PORT }}"
        - name: MATCHBOX_SERVICE_PORT
          value: "{{ MATCHBOX_SERVICE_PORT }}"
        - name: ELASTICSEARCH_SERVICE_PORT
          value: "{{ ELASTICSEARCH_SERVICE_PORT }}"
        - name: MONGO_SERVICE_PORT
          value: "{{ MONGO_SERVICE_PORT }}"
        - name: DEPLOY_TO
          value: "{{ DEPLOY_TO }}"
        - name: DEPLOY_TO_PREFIX
          value: "{{ DEPLOY_TO_PREFIX }}"
        - name: DEPLOYMENT_TYPE
          value: "{{ DEPLOYMENT_TYPE }}"
        - name: DOCKER_IMAGE_PREFIX
          value: "{{ DOCKER_IMAGE_PREFIX }}"
        - name: USE_EXTERNAL_POSTGRES_DB
          value: "{{ USE_EXTERNAL_POSTGRES_DB }}"
        - name: CLUSTER_NAME
          value: "{{ CLUSTER_NAME }}"
        - name: POSTGRES_DBPATH
          value: "{{ POSTGRES_DBPATH }}"
        - name: MONGO_DBPATH
          value: "{{ MONGO_DBPATH }}"
        - name: ELASTICSEARCH_DBPATH
          value: "{{ ELASTICSEARCH_DBPATH }}"
        - name: TEST_DATA_DIR
          value: "{{ TEST_DATA_DIR }}"
        - name: CLOUD_PROVIDER
          value: "{{ CLOUD_PROVIDER }}"
        - name: CLUSTER_MACHINE_TYPE
          value: "{{ CLUSTER_MACHINE_TYPE }}"
        - name: CLUSTER_NUM_NODES
          value: "{{ CLUSTER_NUM_NODES }}"
        - name: CLUSTER_HOSTNAME
          value: "{{ CLUSTER_HOSTNAME }}"
        - name: USE_GCLOUD_DATAPROC
          value: "{{ USE_GCLOUD_DATAPROC }}"
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
      restartPolicy: Always
      dnsPolicy: ClusterFirst
