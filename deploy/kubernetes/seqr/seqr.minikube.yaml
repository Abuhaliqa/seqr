kind: Service
apiVersion: v1
metadata:
  name: seqr
  labels:
    name: seqr
    deployment: {{ DEPLOY_TO }}
spec:
  type: NodePort
  ports:
    port: {{ SEQR_SERVICE_PORT }}
    nodePort: {{ SEQR_SERVICE_NODE_PORT }}
  selector:
    name: seqr
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: seqr
  labels:
    name: seqr
    deployment: {{ DEPLOY_TO }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: seqr
        deployment: {{ DEPLOY_TO }}
    spec:
      volumes:
      #- name: seqr-code
      #  hostPath:
      #    path: {{ BASE_DIR }}
      - name: data-dir
        hostPath:
          path: {{ LOCAL_DATA_DIR }}
      - name: gcloud-client-secrets-volume
        secret:
          secretName: gcloud-client-secrets
      containers:
      - name: seqr-pod
        image: {{ DOCKER_IMAGE_PREFIX }}/seqr:{{ TIMESTAMP }}
        ports:
        - containerPort: {{ SEQR_SERVICE_PORT }}
          protocol: TCP
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        volumeMounts:
#        - name: seqr-code
#          mountPath: /seqr
        - name: data-dir
          mountPath: /data
        - name: gcloud-client-secrets-volume
          mountPath: /.config
          readOnly: true
        resources:
          requests:
            memory: "1.5Gi"
            cpu: "1"
          limits:
            memory: "8Gi"
            cpu: "5"
        envFrom:
          - configMapRef:
              name: all-settings
        env:
        - name: DJANGO_KEY
          valueFrom:
            secretKeyRef:
              name: seqr-secrets
              key: django_key
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.password
        - name: OMIM_KEY
          valueFrom:
            secretKeyRef:
              name: seqr-secrets
              key: omim_key
        - name: POSTMARK_SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: seqr-secrets
              key: postmark_server_token
        - name: MME_NODE_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: seqr-secrets
              key: mme_node_admin_token
        - name: GCLOUD_PROJECT      #  TODO can delete these and just rely on 'envFrom configMapRef' above once https://github.com/kubernetes/minikube/issues/2295 is fixed
          value: "{{ GCLOUD_PROJECT }}"
        - name: GCLOUD_ZONE
          value: "{{ GCLOUD_ZONE }}"
        - name: HOST_MACHINE_IP
          value: "{{ HOST_MACHINE_IP }}"
        - name: MATCHBOX_SERVICE_HOSTNAME
          value: "{{ MATCHBOX_SERVICE_HOSTNAME }}"
        - name: POSTGRES_SERVICE_HOSTNAME
          value: "{{ POSTGRES_SERVICE_HOSTNAME }}"
        - name: MONGO_SERVICE_HOSTNAME
          value: "{{ MONGO_SERVICE_HOSTNAME }}"
        - name: PHENOTIPS_SERVICE_HOSTNAME
          value: "{{ PHENOTIPS_SERVICE_HOSTNAME }}"
        - name: ELASTICSEARCH_SERVICE_HOSTNAME
          value: "{{ ELASTICSEARCH_SERVICE_HOSTNAME }}"
        - name: REDIS_SERVICE_HOSTNAME
          value: "{{ REDIS_SERVICE_HOSTNAME }}"
        - name: SEQR_SERVICE_PORT
          value: "{{ SEQR_SERVICE_PORT }}"
        - name: PHENOTIPS_SERVICE_PORT
          value: "{{ PHENOTIPS_SERVICE_PORT }}"
        - name: POSTGRES_SERVICE_PORT
          value: "{{ POSTGRES_SERVICE_PORT }}"
        - name: MATCHBOX_SERVICE_PORT
          value: "{{ MATCHBOX_SERVICE_PORT }}"
        - name: ELASTICSEARCH_SERVICE_PORT
          value: "{{ ELASTICSEARCH_SERVICE_PORT }}"
        - name: MONGO_SERVICE_PORT
          value: "{{ MONGO_SERVICE_PORT }}"
        - name: DEPLOY_TO
          value: "{{ DEPLOY_TO }}"
        - name: DEPLOY_TO_PREFIX
          value: "{{ DEPLOY_TO_PREFIX }}"
        - name: DEPLOYMENT_TYPE
          value: "{{ DEPLOYMENT_TYPE }}"
        - name: CLUSTER_NAME
          value: "{{ CLUSTER_NAME }}"
        - name: SEQR_GIT_BRANCH
          value: "{{ SEQR_GIT_BRANCH }}"
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /readiness_probe
      restartPolicy: Always
      dnsPolicy: ClusterFirst
